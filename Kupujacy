package uz.zgora.pwir.lab3a;

import java.util.Random;

public class Kupujacy extends Thread 
{
	private Cukiernia cukiernia;
//	private DostawcaPaczków dostawcaPaczków;

	private String nazwa;
	private String stan;
	
	public static int CzasChodzenia; //1
	public static int CzasJedzenia; //2
	
	private int maksCzasJazdy;
	private int czasJazdyLosuj;	
	
	private int maksCzasJedzenia;
	private int czasJedzeniaLosuj;

	public Kupujacy(String kupujacy_name, Cukiernia cukiernia)
	{
		this.nazwa = kupujacy_name;  
		this.cukiernia = cukiernia; 
		this.stan = "czekanie";
		System.out.println(""+ nazwa + " utworzony");
		maksCzasJazdy = losuj(1);
		maksCzasJedzenia = losuj(2);
	}
	
	private void komunikat(String text)
	{
		System.out.println(nazwa+": "+text);
	}
	
	public String getKupujacy()
	{
		return nazwa;
	}
	
	private int losuj(int wybor)
	{
		int plusMinus = new Random().nextInt(2);
		switch(wybor)
		{
			case 1:
				{
					if (plusMinus == 0) return (int) (CzasChodzenia - ((new Random().nextInt(20)) * CzasChodzenia)/100);
					if (plusMinus == 1) return (int) (CzasChodzenia + ((new Random().nextInt(20)) * CzasChodzenia)/100);
				}
			case 2:
				{
					if (plusMinus == 0) return (int) (CzasJedzenia - ((new Random().nextInt(20)) * CzasJedzenia)/100);
					if (plusMinus == 1) return (int) (CzasJedzenia + ((new Random().nextInt(20)) * CzasJedzenia)/100);
				}
		}
		return 0;
	}
	
	public void run()
	{
		czasJazdyLosuj = maksCzasJazdy;
		czasJedzeniaLosuj = maksCzasJedzenia;
		while(true){
			
			if(stan=="czekanie"){

				int czas = czasJazdyLosuj;
				komunikat("poczekam "+czas+" ms.");
				
				try {
					sleep(czas);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				stan="wchodzenie";
			}
			
			if(stan=="wchodzenie"){
				komunikat("Próbuje wejść do cukierni.");
				
				int x = (int) (Math.random()*2);
				if(x == 0){
				if(cukiernia.wejscieCukiernia1(this)){
					komunikat("wchodze do cukierni. Okno 1");
					stan="zwiedzanie";
				}
				else {
					komunikat("Nie moge wejsc do cukierni, czekam. Okno 1");
//					stan="czekanie";
					}
				}
				else{
				if(cukiernia.wejscieCukiernia2(this)){
					komunikat("wchodze do cukierni. Okno 2");
					
					stan="zwiedzanie";
				}
				else {
					komunikat("Nie moge wejsc do cukierni, czekam. okno 2");
//					stan="czekanie";
					}
				}
			}

			if(stan=="zwiedzanie")
			{
				int czas = czasJedzeniaLosuj;
					komunikat("Zostane w cukierni przez "+czas+" ms.");
				try {
					sleep(czas);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				stan="wychodzenie";
			}
			
			if(stan=="wychodzenie")
			{
				komunikat("Chcę wyjść z tej cukierni.");
				
				int x = (int) (Math.random()*2);
				if(x == 0)
				{
					if(cukiernia.opuscilCukiernie(Kupujacy.this))
					{
						komunikat("wychodze z cukierni. Okno 1 ");
						stan="czekanie";
					}

					else 
					{
						komunikat("tutaj totalnie nic sie nie dzieje");
						stan="wychodzenie";
					}
				}
				else
				{
					if(cukiernia.opuscilCukiernie2(Kupujacy.this))
					{
						komunikat("wychodze z cukierni. Okno 2");
						stan="czekanie";
					}
					
					else 
					{
						komunikat("tutaj totalnie nic sie nie dzieje");
						stan="wychodzenie";
					}
				}
			}
		}		
	}
}
	

